# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/poker-eval
pkgincludedir = $(includedir)/poker-eval
pkglibdir = $(libdir)/poker-eval
pkglibexecdir = $(libexecdir)/poker-eval
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin15.6.0
host_triplet = x86_64-apple-darwin15.6.0
target_triplet = x86_64-apple-darwin15.6.0
TESTS = ./bug1823 $(check_PROGRAMS) gcov-report
check_PROGRAMS = joktest1$(EXEEXT) enumtest1$(EXEEXT) \
	enumtest2$(EXEEXT) enumtest3$(EXEEXT) enumtest5$(EXEEXT) \
	enumtest7$(EXEEXT) poker_wrapper$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/run.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ccache.m4 \
	$(top_srcdir)/config/gcov.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/poker_config.h
CONFIG_CLEAN_FILES = run
CONFIG_CLEAN_VPATH_FILES =
am_enumtest1_OBJECTS = enumtest1-enumtest1.$(OBJEXT)
enumtest1_OBJECTS = $(am_enumtest1_OBJECTS)
enumtest1_DEPENDENCIES = $(top_builddir)/lib/libpoker-eval.la
enumtest1_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(enumtest1_LDFLAGS) $(LDFLAGS) -o $@
am_enumtest2_OBJECTS = enumtest2-enumtest2.$(OBJEXT)
enumtest2_OBJECTS = $(am_enumtest2_OBJECTS)
enumtest2_DEPENDENCIES = $(top_builddir)/lib/libpoker-eval.la
enumtest2_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(enumtest2_LDFLAGS) $(LDFLAGS) -o $@
am_enumtest3_OBJECTS = enumtest3-enumtest3.$(OBJEXT)
enumtest3_OBJECTS = $(am_enumtest3_OBJECTS)
enumtest3_DEPENDENCIES = $(top_builddir)/lib/libpoker-eval.la
enumtest3_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(enumtest3_LDFLAGS) $(LDFLAGS) -o $@
am_enumtest5_OBJECTS = enumtest5-enumtest5.$(OBJEXT)
enumtest5_OBJECTS = $(am_enumtest5_OBJECTS)
enumtest5_DEPENDENCIES = $(top_builddir)/lib/libpoker-eval.la
enumtest5_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(enumtest5_LDFLAGS) $(LDFLAGS) -o $@
am_enumtest7_OBJECTS = enumtest7-enumtest7.$(OBJEXT)
enumtest7_OBJECTS = $(am_enumtest7_OBJECTS)
enumtest7_DEPENDENCIES = $(top_builddir)/lib/libpoker-eval.la
enumtest7_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(enumtest7_LDFLAGS) $(LDFLAGS) -o $@
am_joktest1_OBJECTS = joktest1-joktest1.$(OBJEXT)
joktest1_OBJECTS = $(am_joktest1_OBJECTS)
joktest1_DEPENDENCIES = $(top_builddir)/lib/libpoker-eval.la
joktest1_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(joktest1_LDFLAGS) \
	$(LDFLAGS) -o $@
am_poker_wrapper_OBJECTS = poker_wrapper-poker_wrapper.$(OBJEXT)
poker_wrapper_OBJECTS = $(am_poker_wrapper_OBJECTS)
poker_wrapper_DEPENDENCIES = $(top_builddir)/lib/libpoker-eval.la
poker_wrapper_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(poker_wrapper_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(enumtest1_SOURCES) $(enumtest2_SOURCES) \
	$(enumtest3_SOURCES) $(enumtest5_SOURCES) $(enumtest7_SOURCES) \
	$(joktest1_SOURCES) $(poker_wrapper_SOURCES)
DIST_SOURCES = $(enumtest1_SOURCES) $(enumtest2_SOURCES) \
	$(enumtest3_SOURCES) $(enumtest5_SOURCES) $(enumtest7_SOURCES) \
	$(joktest1_SOURCES) $(poker_wrapper_SOURCES)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/config/missing --run aclocal-1.11
AMTAR = ${SHELL} /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/config/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/config/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/config/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/config/missing --run automake-1.11
AWK = /usr/bin/awk
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -Wall -Wpointer-arith -Wstrict-prototypes
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GCOV = /usr/bin/gcov
GCOV_CPPFLAGS = 
GCOV_FLAGS = 
GCOV_LDFLAGS = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Library/Developer/CommandLineTools/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/config/missing --run makeinfo
MD5SUM = /sbin/md5
MKDIR_P = ../config/install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = poker-eval
PACKAGE_BUGREPORT = 
PACKAGE_NAME = poker-eval
PACKAGE_STRING = poker-eval 138.0
PACKAGE_TARNAME = poker-eval
PACKAGE_URL = 
PACKAGE_VERSION = 138.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VALGRIND = 
VERSION = 138.0
abs_builddir = /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/tests
abs_srcdir = /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/tests
abs_top_builddir = /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0
abs_top_srcdir = /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin15.6.0
build_alias = 
build_cpu = x86_64
build_os = darwin15.6.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin15.6.0
host_alias = 
host_cpu = x86_64
host_os = darwin15.6.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/amaro/Github/poker/PokerBots_2017/poker-eval-138.0/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = /bin/echo
mandir = ${datarootdir}/man
mkdir_p = $(top_builddir)/config/install-sh -c -d
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin15.6.0
target_alias = 
target_cpu = x86_64
target_os = darwin15.6.0
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#
# Copyright (C) 2004-2006 Mekensleep
#
# Mekensleep <licensing@mekensleep.com>
# 24 rue vieille du temple, 75004 Paris
#       
# This program gives you software freedom; you can copy, convey,
# propagate, redistribute and/or modify this program under the terms of
# the GNU General Public License (GPL) as published by the Free Software
# Foundation (FSF), either version 3 of the License, or (at your option)
# any later version of the GPL published by the FSF.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program in a file in the toplevel directory called "GPLv3".
# If not, see <http://www.gnu.org/licenses/>.
#
#
# Authors:
#  Loic Dachary <loic@dachary.org>
#
# 
MAINTAINERCLEANFILES = Makefile.in
INCLUDES = -I$(top_srcdir)/include
EXTRA_DIST = \
	run.in \
	razz.c \
	bug1823

TESTS_ENVIRONMENT = ./run
joktest1_SOURCES = joktest1.c
joktest1_LDADD = $(top_builddir)/lib/libpoker-eval.la
joktest1_CPPFLAGS = ${GCOV_CPPFLAGS}
joktest1_LDFLAGS = ${GCOV_LDFLAGS}
enumtest1_SOURCES = enumtest1.c
enumtest1_LDADD = $(top_builddir)/lib/libpoker-eval.la
enumtest1_CPPFLAGS = ${GCOV_CPPFLAGS}
enumtest1_LDFLAGS = ${GCOV_LDFLAGS}
enumtest2_SOURCES = enumtest2.c
enumtest2_LDADD = $(top_builddir)/lib/libpoker-eval.la
enumtest2_CPPFLAGS = ${GCOV_CPPFLAGS}
enumtest2_LDFLAGS = ${GCOV_LDFLAGS}
enumtest3_SOURCES = enumtest3.c
enumtest3_LDADD = $(top_builddir)/lib/libpoker-eval.la
enumtest3_CPPFLAGS = ${GCOV_CPPFLAGS}
enumtest3_LDFLAGS = ${GCOV_LDFLAGS}
enumtest5_SOURCES = enumtest5.c
enumtest5_LDADD = $(top_builddir)/lib/libpoker-eval.la
enumtest5_CPPFLAGS = ${GCOV_CPPFLAGS}
enumtest5_LDFLAGS = ${GCOV_LDFLAGS}
enumtest7_SOURCES = enumtest7.c
enumtest7_LDADD = $(top_builddir)/lib/libpoker-eval.la
enumtest7_CPPFLAGS = ${GCOV_CPPFLAGS}
enumtest7_LDFLAGS = ${GCOV_LDFLAGS}
poker_wrapper_SOURCES = poker_wrapper.c
poker_wrapper_LDADD = $(top_builddir)/lib/libpoker-eval.la
poker_wrapper_CPPFLAGS = ${GCOV_CPPFLAGS}
poker_wrapper_LDFLAGS = ${GCOV_LDFLAGS}
razz_SOURCES = razz.c
razz_LDADD = $(top_builddir)/lib/libpoker-eval.la
razz_CPPFLAGS = ${GCOV_CPPFLAGS}
razz_LDFLAGS = ${GCOV_LDFLAGS}
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
run: $(top_builddir)/config.status $(srcdir)/run.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
enumtest1$(EXEEXT): $(enumtest1_OBJECTS) $(enumtest1_DEPENDENCIES) 
	@rm -f enumtest1$(EXEEXT)
	$(enumtest1_LINK) $(enumtest1_OBJECTS) $(enumtest1_LDADD) $(LIBS)
enumtest2$(EXEEXT): $(enumtest2_OBJECTS) $(enumtest2_DEPENDENCIES) 
	@rm -f enumtest2$(EXEEXT)
	$(enumtest2_LINK) $(enumtest2_OBJECTS) $(enumtest2_LDADD) $(LIBS)
enumtest3$(EXEEXT): $(enumtest3_OBJECTS) $(enumtest3_DEPENDENCIES) 
	@rm -f enumtest3$(EXEEXT)
	$(enumtest3_LINK) $(enumtest3_OBJECTS) $(enumtest3_LDADD) $(LIBS)
enumtest5$(EXEEXT): $(enumtest5_OBJECTS) $(enumtest5_DEPENDENCIES) 
	@rm -f enumtest5$(EXEEXT)
	$(enumtest5_LINK) $(enumtest5_OBJECTS) $(enumtest5_LDADD) $(LIBS)
enumtest7$(EXEEXT): $(enumtest7_OBJECTS) $(enumtest7_DEPENDENCIES) 
	@rm -f enumtest7$(EXEEXT)
	$(enumtest7_LINK) $(enumtest7_OBJECTS) $(enumtest7_LDADD) $(LIBS)
joktest1$(EXEEXT): $(joktest1_OBJECTS) $(joktest1_DEPENDENCIES) 
	@rm -f joktest1$(EXEEXT)
	$(joktest1_LINK) $(joktest1_OBJECTS) $(joktest1_LDADD) $(LIBS)
poker_wrapper$(EXEEXT): $(poker_wrapper_OBJECTS) $(poker_wrapper_DEPENDENCIES) 
	@rm -f poker_wrapper$(EXEEXT)
	$(poker_wrapper_LINK) $(poker_wrapper_OBJECTS) $(poker_wrapper_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/enumtest1-enumtest1.Po
include ./$(DEPDIR)/enumtest2-enumtest2.Po
include ./$(DEPDIR)/enumtest3-enumtest3.Po
include ./$(DEPDIR)/enumtest5-enumtest5.Po
include ./$(DEPDIR)/enumtest7-enumtest7.Po
include ./$(DEPDIR)/joktest1-joktest1.Po
include ./$(DEPDIR)/poker_wrapper-poker_wrapper.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

enumtest1-enumtest1.o: enumtest1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest1-enumtest1.o -MD -MP -MF $(DEPDIR)/enumtest1-enumtest1.Tpo -c -o enumtest1-enumtest1.o `test -f 'enumtest1.c' || echo '$(srcdir)/'`enumtest1.c
	$(am__mv) $(DEPDIR)/enumtest1-enumtest1.Tpo $(DEPDIR)/enumtest1-enumtest1.Po
#	source='enumtest1.c' object='enumtest1-enumtest1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest1-enumtest1.o `test -f 'enumtest1.c' || echo '$(srcdir)/'`enumtest1.c

enumtest1-enumtest1.obj: enumtest1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest1-enumtest1.obj -MD -MP -MF $(DEPDIR)/enumtest1-enumtest1.Tpo -c -o enumtest1-enumtest1.obj `if test -f 'enumtest1.c'; then $(CYGPATH_W) 'enumtest1.c'; else $(CYGPATH_W) '$(srcdir)/enumtest1.c'; fi`
	$(am__mv) $(DEPDIR)/enumtest1-enumtest1.Tpo $(DEPDIR)/enumtest1-enumtest1.Po
#	source='enumtest1.c' object='enumtest1-enumtest1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest1-enumtest1.obj `if test -f 'enumtest1.c'; then $(CYGPATH_W) 'enumtest1.c'; else $(CYGPATH_W) '$(srcdir)/enumtest1.c'; fi`

enumtest2-enumtest2.o: enumtest2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest2-enumtest2.o -MD -MP -MF $(DEPDIR)/enumtest2-enumtest2.Tpo -c -o enumtest2-enumtest2.o `test -f 'enumtest2.c' || echo '$(srcdir)/'`enumtest2.c
	$(am__mv) $(DEPDIR)/enumtest2-enumtest2.Tpo $(DEPDIR)/enumtest2-enumtest2.Po
#	source='enumtest2.c' object='enumtest2-enumtest2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest2-enumtest2.o `test -f 'enumtest2.c' || echo '$(srcdir)/'`enumtest2.c

enumtest2-enumtest2.obj: enumtest2.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest2-enumtest2.obj -MD -MP -MF $(DEPDIR)/enumtest2-enumtest2.Tpo -c -o enumtest2-enumtest2.obj `if test -f 'enumtest2.c'; then $(CYGPATH_W) 'enumtest2.c'; else $(CYGPATH_W) '$(srcdir)/enumtest2.c'; fi`
	$(am__mv) $(DEPDIR)/enumtest2-enumtest2.Tpo $(DEPDIR)/enumtest2-enumtest2.Po
#	source='enumtest2.c' object='enumtest2-enumtest2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest2_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest2-enumtest2.obj `if test -f 'enumtest2.c'; then $(CYGPATH_W) 'enumtest2.c'; else $(CYGPATH_W) '$(srcdir)/enumtest2.c'; fi`

enumtest3-enumtest3.o: enumtest3.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest3_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest3-enumtest3.o -MD -MP -MF $(DEPDIR)/enumtest3-enumtest3.Tpo -c -o enumtest3-enumtest3.o `test -f 'enumtest3.c' || echo '$(srcdir)/'`enumtest3.c
	$(am__mv) $(DEPDIR)/enumtest3-enumtest3.Tpo $(DEPDIR)/enumtest3-enumtest3.Po
#	source='enumtest3.c' object='enumtest3-enumtest3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest3_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest3-enumtest3.o `test -f 'enumtest3.c' || echo '$(srcdir)/'`enumtest3.c

enumtest3-enumtest3.obj: enumtest3.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest3_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest3-enumtest3.obj -MD -MP -MF $(DEPDIR)/enumtest3-enumtest3.Tpo -c -o enumtest3-enumtest3.obj `if test -f 'enumtest3.c'; then $(CYGPATH_W) 'enumtest3.c'; else $(CYGPATH_W) '$(srcdir)/enumtest3.c'; fi`
	$(am__mv) $(DEPDIR)/enumtest3-enumtest3.Tpo $(DEPDIR)/enumtest3-enumtest3.Po
#	source='enumtest3.c' object='enumtest3-enumtest3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest3_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest3-enumtest3.obj `if test -f 'enumtest3.c'; then $(CYGPATH_W) 'enumtest3.c'; else $(CYGPATH_W) '$(srcdir)/enumtest3.c'; fi`

enumtest5-enumtest5.o: enumtest5.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest5-enumtest5.o -MD -MP -MF $(DEPDIR)/enumtest5-enumtest5.Tpo -c -o enumtest5-enumtest5.o `test -f 'enumtest5.c' || echo '$(srcdir)/'`enumtest5.c
	$(am__mv) $(DEPDIR)/enumtest5-enumtest5.Tpo $(DEPDIR)/enumtest5-enumtest5.Po
#	source='enumtest5.c' object='enumtest5-enumtest5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest5-enumtest5.o `test -f 'enumtest5.c' || echo '$(srcdir)/'`enumtest5.c

enumtest5-enumtest5.obj: enumtest5.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest5-enumtest5.obj -MD -MP -MF $(DEPDIR)/enumtest5-enumtest5.Tpo -c -o enumtest5-enumtest5.obj `if test -f 'enumtest5.c'; then $(CYGPATH_W) 'enumtest5.c'; else $(CYGPATH_W) '$(srcdir)/enumtest5.c'; fi`
	$(am__mv) $(DEPDIR)/enumtest5-enumtest5.Tpo $(DEPDIR)/enumtest5-enumtest5.Po
#	source='enumtest5.c' object='enumtest5-enumtest5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest5-enumtest5.obj `if test -f 'enumtest5.c'; then $(CYGPATH_W) 'enumtest5.c'; else $(CYGPATH_W) '$(srcdir)/enumtest5.c'; fi`

enumtest7-enumtest7.o: enumtest7.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest7-enumtest7.o -MD -MP -MF $(DEPDIR)/enumtest7-enumtest7.Tpo -c -o enumtest7-enumtest7.o `test -f 'enumtest7.c' || echo '$(srcdir)/'`enumtest7.c
	$(am__mv) $(DEPDIR)/enumtest7-enumtest7.Tpo $(DEPDIR)/enumtest7-enumtest7.Po
#	source='enumtest7.c' object='enumtest7-enumtest7.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest7-enumtest7.o `test -f 'enumtest7.c' || echo '$(srcdir)/'`enumtest7.c

enumtest7-enumtest7.obj: enumtest7.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT enumtest7-enumtest7.obj -MD -MP -MF $(DEPDIR)/enumtest7-enumtest7.Tpo -c -o enumtest7-enumtest7.obj `if test -f 'enumtest7.c'; then $(CYGPATH_W) 'enumtest7.c'; else $(CYGPATH_W) '$(srcdir)/enumtest7.c'; fi`
	$(am__mv) $(DEPDIR)/enumtest7-enumtest7.Tpo $(DEPDIR)/enumtest7-enumtest7.Po
#	source='enumtest7.c' object='enumtest7-enumtest7.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(enumtest7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o enumtest7-enumtest7.obj `if test -f 'enumtest7.c'; then $(CYGPATH_W) 'enumtest7.c'; else $(CYGPATH_W) '$(srcdir)/enumtest7.c'; fi`

joktest1-joktest1.o: joktest1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(joktest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT joktest1-joktest1.o -MD -MP -MF $(DEPDIR)/joktest1-joktest1.Tpo -c -o joktest1-joktest1.o `test -f 'joktest1.c' || echo '$(srcdir)/'`joktest1.c
	$(am__mv) $(DEPDIR)/joktest1-joktest1.Tpo $(DEPDIR)/joktest1-joktest1.Po
#	source='joktest1.c' object='joktest1-joktest1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(joktest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o joktest1-joktest1.o `test -f 'joktest1.c' || echo '$(srcdir)/'`joktest1.c

joktest1-joktest1.obj: joktest1.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(joktest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT joktest1-joktest1.obj -MD -MP -MF $(DEPDIR)/joktest1-joktest1.Tpo -c -o joktest1-joktest1.obj `if test -f 'joktest1.c'; then $(CYGPATH_W) 'joktest1.c'; else $(CYGPATH_W) '$(srcdir)/joktest1.c'; fi`
	$(am__mv) $(DEPDIR)/joktest1-joktest1.Tpo $(DEPDIR)/joktest1-joktest1.Po
#	source='joktest1.c' object='joktest1-joktest1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(joktest1_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o joktest1-joktest1.obj `if test -f 'joktest1.c'; then $(CYGPATH_W) 'joktest1.c'; else $(CYGPATH_W) '$(srcdir)/joktest1.c'; fi`

poker_wrapper-poker_wrapper.o: poker_wrapper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poker_wrapper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT poker_wrapper-poker_wrapper.o -MD -MP -MF $(DEPDIR)/poker_wrapper-poker_wrapper.Tpo -c -o poker_wrapper-poker_wrapper.o `test -f 'poker_wrapper.c' || echo '$(srcdir)/'`poker_wrapper.c
	$(am__mv) $(DEPDIR)/poker_wrapper-poker_wrapper.Tpo $(DEPDIR)/poker_wrapper-poker_wrapper.Po
#	source='poker_wrapper.c' object='poker_wrapper-poker_wrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poker_wrapper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o poker_wrapper-poker_wrapper.o `test -f 'poker_wrapper.c' || echo '$(srcdir)/'`poker_wrapper.c

poker_wrapper-poker_wrapper.obj: poker_wrapper.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poker_wrapper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT poker_wrapper-poker_wrapper.obj -MD -MP -MF $(DEPDIR)/poker_wrapper-poker_wrapper.Tpo -c -o poker_wrapper-poker_wrapper.obj `if test -f 'poker_wrapper.c'; then $(CYGPATH_W) 'poker_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/poker_wrapper.c'; fi`
	$(am__mv) $(DEPDIR)/poker_wrapper-poker_wrapper.Tpo $(DEPDIR)/poker_wrapper-poker_wrapper.Po
#	source='poker_wrapper.c' object='poker_wrapper-poker_wrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(poker_wrapper_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o poker_wrapper-poker_wrapper.obj `if test -f 'poker_wrapper.c'; then $(CYGPATH_W) 'poker_wrapper.c'; else $(CYGPATH_W) '$(srcdir)/poker_wrapper.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool clean-local \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


.PHONY: gcov-report

clean-local:
	-rm -f *.gcov *.gcda *.gcno

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
