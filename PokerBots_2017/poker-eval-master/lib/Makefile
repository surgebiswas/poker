# Makefile.in generated by automake 1.15 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/poker-eval
pkgincludedir = $(includedir)/poker-eval
pkglibdir = $(libdir)/poker-eval
pkglibexecdir = $(libexecdir)/poker-eval
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin15.6.0
host_triplet = x86_64-apple-darwin15.6.0
target_triplet = x86_64-apple-darwin15.6.0
noinst_PROGRAMS = mktab_basic$(EXEEXT) mktab_joker$(EXEEXT) \
	mktab_packed$(EXEEXT) mktab_evx$(EXEEXT) mktab_astud$(EXEEXT) \
	mktab_lowball$(EXEEXT) evx_gen5$(EXEEXT) evx_gen7$(EXEEXT)
subdir = lib
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ccache.m4 \
	$(top_srcdir)/config/gcov.m4 $(top_srcdir)/config/libtool.m4 \
	$(top_srcdir)/config/ltoptions.m4 \
	$(top_srcdir)/config/ltsugar.m4 \
	$(top_srcdir)/config/ltversion.m4 \
	$(top_srcdir)/config/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h \
	$(top_builddir)/include/poker_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libpoker_eval_la_LIBADD =
am__objects_1 = libpoker_eval_la-combinations.lo \
	libpoker_eval_la-deck.lo libpoker_eval_la-deck_astud.lo \
	libpoker_eval_la-deck_joker.lo libpoker_eval_la-deck_std.lo \
	libpoker_eval_la-enumerate.lo libpoker_eval_la-enumord.lo \
	libpoker_eval_la-evx.lo libpoker_eval_la-lowball.lo \
	libpoker_eval_la-rules_astud.lo \
	libpoker_eval_la-rules_joker.lo libpoker_eval_la-rules_std.lo \
	libpoker_eval_la-poker_wrapper.lo
am__objects_2 = libpoker_eval_la-t_nbits.lo \
	libpoker_eval_la-t_topbit.lo libpoker_eval_la-t_topcard.lo \
	libpoker_eval_la-t_topfivecards.lo \
	libpoker_eval_la-t_topfivebits.lo \
	libpoker_eval_la-t_toptwobits.lo \
	libpoker_eval_la-t_cardmasks.lo libpoker_eval_la-t_maskrank.lo \
	libpoker_eval_la-t_straight.lo
am__objects_3 = libpoker_eval_la-t_jokercardmasks.lo \
	libpoker_eval_la-t_jokerstraight.lo
am__objects_4 = libpoker_eval_la-t_nbitsandstr.lo
am__objects_5 = libpoker_eval_la-t_evx_pairval.lo \
	libpoker_eval_la-t_evx_strval.lo \
	libpoker_eval_la-t_evx_tripsval.lo \
	libpoker_eval_la-t_evx_flushcards.lo
am__objects_6 = libpoker_eval_la-t_astudcardmasks.lo
am__objects_7 = libpoker_eval_la-t_botfivecards.lo \
	libpoker_eval_la-t_botcard.lo \
	libpoker_eval_la-t_botfivecardsj.lo
am__objects_8 = $(am__objects_2) $(am__objects_3) $(am__objects_4) \
	$(am__objects_5) $(am__objects_6) $(am__objects_7)
nodist_libpoker_eval_la_OBJECTS = $(am__objects_1) $(am__objects_8)
libpoker_eval_la_OBJECTS = $(nodist_libpoker_eval_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libpoker_eval_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libpoker_eval_la_LDFLAGS) $(LDFLAGS) \
	-o $@
PROGRAMS = $(noinst_PROGRAMS)
am_evx_gen5_OBJECTS = evx_gen5-evx_generate.$(OBJEXT)
evx_gen5_OBJECTS = $(am_evx_gen5_OBJECTS)
evx_gen5_LDADD = $(LDADD)
am_evx_gen7_OBJECTS = evx_gen7-evx_generate.$(OBJEXT)
evx_gen7_OBJECTS = $(am_evx_gen7_OBJECTS)
evx_gen7_LDADD = $(LDADD)
am__objects_9 = mktable.$(OBJEXT) mktable_utils.$(OBJEXT)
am_mktab_astud_OBJECTS = mktab_astud.$(OBJEXT) $(am__objects_9)
mktab_astud_OBJECTS = $(am_mktab_astud_OBJECTS)
mktab_astud_LDADD = $(LDADD)
am_mktab_basic_OBJECTS = mktab_basic.$(OBJEXT) $(am__objects_9)
mktab_basic_OBJECTS = $(am_mktab_basic_OBJECTS)
mktab_basic_LDADD = $(LDADD)
am_mktab_evx_OBJECTS = mktab_evx.$(OBJEXT) $(am__objects_9)
mktab_evx_OBJECTS = $(am_mktab_evx_OBJECTS)
mktab_evx_LDADD = $(LDADD)
am_mktab_joker_OBJECTS = mktab_joker.$(OBJEXT) $(am__objects_9)
mktab_joker_OBJECTS = $(am_mktab_joker_OBJECTS)
mktab_joker_LDADD = $(LDADD)
am_mktab_lowball_OBJECTS = mktab_lowball.$(OBJEXT) $(am__objects_9)
mktab_lowball_OBJECTS = $(am_mktab_lowball_OBJECTS)
mktab_lowball_LDADD = $(LDADD)
am_mktab_packed_OBJECTS = mktab_packed.$(OBJEXT) $(am__objects_9)
mktab_packed_OBJECTS = $(am_mktab_packed_OBJECTS)
mktab_packed_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(nodist_libpoker_eval_la_SOURCES) $(evx_gen5_SOURCES) \
	$(evx_gen7_SOURCES) $(mktab_astud_SOURCES) \
	$(mktab_basic_SOURCES) $(mktab_evx_SOURCES) \
	$(mktab_joker_SOURCES) $(mktab_lowball_SOURCES) \
	$(mktab_packed_SOURCES)
DIST_SOURCES = $(evx_gen5_SOURCES) $(evx_gen7_SOURCES) \
	$(mktab_astud_SOURCES) $(mktab_basic_SOURCES) \
	$(mktab_evx_SOURCES) $(mktab_joker_SOURCES) \
	$(mktab_lowball_SOURCES) $(mktab_packed_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.15
AWK = /usr/bin/awk
CC = gcc
CCACHE = 
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS =  -Wall -Wpointer-arith -Wstrict-prototypes
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GCOV = /usr/bin/gcov
GCOV_CPPFLAGS = 
GCOV_FLAGS = 
GCOV_LDFLAGS = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Library/Developer/CommandLineTools/usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MD5SUM = /sbin/md5
MKDIR_P = ../config/install-sh -c -d
NM = /usr/bin/nm -B
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = poker-eval
PACKAGE_BUGREPORT = 
PACKAGE_NAME = poker-eval
PACKAGE_STRING = poker-eval 138.0
PACKAGE_TARNAME = poker-eval
PACKAGE_URL = 
PACKAGE_VERSION = 138.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VALGRIND = 
VERSION = 138.0
abs_builddir = /Users/amaro/GitHub/poker/PokerBots_2017/poker-eval-master/lib
abs_srcdir = /Users/amaro/GitHub/poker/PokerBots_2017/poker-eval-master/lib
abs_top_builddir = /Users/amaro/GitHub/poker/PokerBots_2017/poker-eval-master
abs_top_srcdir = /Users/amaro/GitHub/poker/PokerBots_2017/poker-eval-master
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin15.6.0
build_alias = 
build_cpu = x86_64
build_os = darwin15.6.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin15.6.0
host_alias = 
host_cpu = x86_64
host_os = darwin15.6.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/amaro/GitHub/poker/PokerBots_2017/poker-eval-master/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin15.6.0
target_alias = 
target_cpu = x86_64
target_os = darwin15.6.0
target_vendor = apple
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#
# Copyright (C) 2004-2006 Mekensleep
#
# Mekensleep <licensing@mekensleep.com>
# 24 rue vieille du temple, 75004 Paris
#       
#
# This program gives you software freedom; you can copy, convey,
# propagate, redistribute and/or modify this program under the terms of
# the GNU General Public License (GPL) as published by the Free Software
# Foundation (FSF), either version 3 of the License, or (at your option)
# any later version of the GPL published by the FSF.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program in a file in the toplevel directory called "GPLv3".
# If not, see <http://www.gnu.org/licenses/>.
#
# Authors:
#  Loic Dachary <loic@dachary.org>
#
# 
MAINTAINERCLEANFILES = \
	Makefile.in \
	$(TABLES)

INCLUDES = -I$(top_srcdir)/include
lib_LTLIBRARIES = libpoker-eval.la
EXTRA_DIST = \
	evx_preamble.cfrag \
	${POKER_EVAL_SOURCES}

BASIC_TABLES = \
        t_nbits.c t_topbit.c t_topcard.c t_topfivecards.c t_topfivebits.c \
        t_toptwobits.c t_cardmasks.c t_maskrank.c t_straight.c 

JOKER_TABLES = t_jokercardmasks.c t_jokerstraight.c
PACKED_TABLES = \
        t_nbitsandstr.c

EVX_TABLES = \
        t_evx_pairval.c t_evx_strval.c t_evx_tripsval.c t_evx_flushcards.c

ASTUD_TABLES = t_astudcardmasks.c
LOWBALL_TABLES = t_botfivecards.c t_botcard.c t_botfivecardsj.c
TABLES = \
	$(BASIC_TABLES) \
	$(JOKER_TABLES) \
	$(PACKED_TABLES) \
	$(EVX_TABLES) \
	$(ASTUD_TABLES) \
	$(LOWBALL_TABLES)

POKER_EVAL_SOURCES = \
	combinations.c \
	deck.c \
	deck_astud.c \
	deck_joker.c \
	deck_std.c \
	enumerate.c \
	enumord.c \
	evx.c \
	lowball.c \
	rules_astud.c \
	rules_joker.c \
	rules_std.c \
	poker_wrapper.c

nodist_libpoker_eval_la_SOURCES = \
	$(POKER_EVAL_SOURCES) \
	$(TABLES)

libpoker_eval_la_CPPFLAGS = ${GCOV_CPPFLAGS}
noinst_HEADERS = \
	mktable.h

MKTABLE_HELPERS = mktable.c mktable_utils.c
mktab_basic_SOURCES = mktab_basic.c $(MKTABLE_HELPERS)
mktab_joker_SOURCES = mktab_joker.c $(MKTABLE_HELPERS)
mktab_packed_SOURCES = mktab_packed.c $(MKTABLE_HELPERS)
mktab_evx_SOURCES = mktab_evx.c $(MKTABLE_HELPERS)
mktab_astud_SOURCES = mktab_astud.c $(MKTABLE_HELPERS)
mktab_lowball_SOURCES = mktab_lowball.c $(MKTABLE_HELPERS)
evx_gen5_SOURCES = evx_generate.c 
evx_gen5_CPPFLAGS = -DCARDS_DEALT=5
evx_gen7_SOURCES = evx_generate.c
evx_gen7_CPPFLAGS = -DCARDS_DEALT=7
libpoker_eval_la_LDFLAGS = -no-undefined -version-info 1:0:0
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu lib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu lib/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libpoker-eval.la: $(libpoker_eval_la_OBJECTS) $(libpoker_eval_la_DEPENDENCIES) $(EXTRA_libpoker_eval_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libpoker_eval_la_LINK) -rpath $(libdir) $(libpoker_eval_la_OBJECTS) $(libpoker_eval_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

evx_gen5$(EXEEXT): $(evx_gen5_OBJECTS) $(evx_gen5_DEPENDENCIES) $(EXTRA_evx_gen5_DEPENDENCIES) 
	@rm -f evx_gen5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(evx_gen5_OBJECTS) $(evx_gen5_LDADD) $(LIBS)

evx_gen7$(EXEEXT): $(evx_gen7_OBJECTS) $(evx_gen7_DEPENDENCIES) $(EXTRA_evx_gen7_DEPENDENCIES) 
	@rm -f evx_gen7$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(evx_gen7_OBJECTS) $(evx_gen7_LDADD) $(LIBS)

mktab_astud$(EXEEXT): $(mktab_astud_OBJECTS) $(mktab_astud_DEPENDENCIES) $(EXTRA_mktab_astud_DEPENDENCIES) 
	@rm -f mktab_astud$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mktab_astud_OBJECTS) $(mktab_astud_LDADD) $(LIBS)

mktab_basic$(EXEEXT): $(mktab_basic_OBJECTS) $(mktab_basic_DEPENDENCIES) $(EXTRA_mktab_basic_DEPENDENCIES) 
	@rm -f mktab_basic$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mktab_basic_OBJECTS) $(mktab_basic_LDADD) $(LIBS)

mktab_evx$(EXEEXT): $(mktab_evx_OBJECTS) $(mktab_evx_DEPENDENCIES) $(EXTRA_mktab_evx_DEPENDENCIES) 
	@rm -f mktab_evx$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mktab_evx_OBJECTS) $(mktab_evx_LDADD) $(LIBS)

mktab_joker$(EXEEXT): $(mktab_joker_OBJECTS) $(mktab_joker_DEPENDENCIES) $(EXTRA_mktab_joker_DEPENDENCIES) 
	@rm -f mktab_joker$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mktab_joker_OBJECTS) $(mktab_joker_LDADD) $(LIBS)

mktab_lowball$(EXEEXT): $(mktab_lowball_OBJECTS) $(mktab_lowball_DEPENDENCIES) $(EXTRA_mktab_lowball_DEPENDENCIES) 
	@rm -f mktab_lowball$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mktab_lowball_OBJECTS) $(mktab_lowball_LDADD) $(LIBS)

mktab_packed$(EXEEXT): $(mktab_packed_OBJECTS) $(mktab_packed_DEPENDENCIES) $(EXTRA_mktab_packed_DEPENDENCIES) 
	@rm -f mktab_packed$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mktab_packed_OBJECTS) $(mktab_packed_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/evx_gen5-evx_generate.Po
include ./$(DEPDIR)/evx_gen7-evx_generate.Po
include ./$(DEPDIR)/libpoker_eval_la-combinations.Plo
include ./$(DEPDIR)/libpoker_eval_la-deck.Plo
include ./$(DEPDIR)/libpoker_eval_la-deck_astud.Plo
include ./$(DEPDIR)/libpoker_eval_la-deck_joker.Plo
include ./$(DEPDIR)/libpoker_eval_la-deck_std.Plo
include ./$(DEPDIR)/libpoker_eval_la-enumerate.Plo
include ./$(DEPDIR)/libpoker_eval_la-enumord.Plo
include ./$(DEPDIR)/libpoker_eval_la-evx.Plo
include ./$(DEPDIR)/libpoker_eval_la-lowball.Plo
include ./$(DEPDIR)/libpoker_eval_la-poker_wrapper.Plo
include ./$(DEPDIR)/libpoker_eval_la-rules_astud.Plo
include ./$(DEPDIR)/libpoker_eval_la-rules_joker.Plo
include ./$(DEPDIR)/libpoker_eval_la-rules_std.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_astudcardmasks.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_botcard.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_botfivecards.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_botfivecardsj.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_cardmasks.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_evx_flushcards.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_evx_pairval.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_evx_strval.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_evx_tripsval.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_jokercardmasks.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_jokerstraight.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_maskrank.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_nbits.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_nbitsandstr.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_straight.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_topbit.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_topcard.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_topfivebits.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_topfivecards.Plo
include ./$(DEPDIR)/libpoker_eval_la-t_toptwobits.Plo
include ./$(DEPDIR)/mktab_astud.Po
include ./$(DEPDIR)/mktab_basic.Po
include ./$(DEPDIR)/mktab_evx.Po
include ./$(DEPDIR)/mktab_joker.Po
include ./$(DEPDIR)/mktab_lowball.Po
include ./$(DEPDIR)/mktab_packed.Po
include ./$(DEPDIR)/mktable.Po
include ./$(DEPDIR)/mktable_utils.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

libpoker_eval_la-combinations.lo: combinations.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-combinations.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-combinations.Tpo -c -o libpoker_eval_la-combinations.lo `test -f 'combinations.c' || echo '$(srcdir)/'`combinations.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-combinations.Tpo $(DEPDIR)/libpoker_eval_la-combinations.Plo
#	$(AM_V_CC)source='combinations.c' object='libpoker_eval_la-combinations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-combinations.lo `test -f 'combinations.c' || echo '$(srcdir)/'`combinations.c

libpoker_eval_la-deck.lo: deck.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-deck.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-deck.Tpo -c -o libpoker_eval_la-deck.lo `test -f 'deck.c' || echo '$(srcdir)/'`deck.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-deck.Tpo $(DEPDIR)/libpoker_eval_la-deck.Plo
#	$(AM_V_CC)source='deck.c' object='libpoker_eval_la-deck.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-deck.lo `test -f 'deck.c' || echo '$(srcdir)/'`deck.c

libpoker_eval_la-deck_astud.lo: deck_astud.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-deck_astud.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-deck_astud.Tpo -c -o libpoker_eval_la-deck_astud.lo `test -f 'deck_astud.c' || echo '$(srcdir)/'`deck_astud.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-deck_astud.Tpo $(DEPDIR)/libpoker_eval_la-deck_astud.Plo
#	$(AM_V_CC)source='deck_astud.c' object='libpoker_eval_la-deck_astud.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-deck_astud.lo `test -f 'deck_astud.c' || echo '$(srcdir)/'`deck_astud.c

libpoker_eval_la-deck_joker.lo: deck_joker.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-deck_joker.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-deck_joker.Tpo -c -o libpoker_eval_la-deck_joker.lo `test -f 'deck_joker.c' || echo '$(srcdir)/'`deck_joker.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-deck_joker.Tpo $(DEPDIR)/libpoker_eval_la-deck_joker.Plo
#	$(AM_V_CC)source='deck_joker.c' object='libpoker_eval_la-deck_joker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-deck_joker.lo `test -f 'deck_joker.c' || echo '$(srcdir)/'`deck_joker.c

libpoker_eval_la-deck_std.lo: deck_std.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-deck_std.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-deck_std.Tpo -c -o libpoker_eval_la-deck_std.lo `test -f 'deck_std.c' || echo '$(srcdir)/'`deck_std.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-deck_std.Tpo $(DEPDIR)/libpoker_eval_la-deck_std.Plo
#	$(AM_V_CC)source='deck_std.c' object='libpoker_eval_la-deck_std.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-deck_std.lo `test -f 'deck_std.c' || echo '$(srcdir)/'`deck_std.c

libpoker_eval_la-enumerate.lo: enumerate.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-enumerate.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-enumerate.Tpo -c -o libpoker_eval_la-enumerate.lo `test -f 'enumerate.c' || echo '$(srcdir)/'`enumerate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-enumerate.Tpo $(DEPDIR)/libpoker_eval_la-enumerate.Plo
#	$(AM_V_CC)source='enumerate.c' object='libpoker_eval_la-enumerate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-enumerate.lo `test -f 'enumerate.c' || echo '$(srcdir)/'`enumerate.c

libpoker_eval_la-enumord.lo: enumord.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-enumord.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-enumord.Tpo -c -o libpoker_eval_la-enumord.lo `test -f 'enumord.c' || echo '$(srcdir)/'`enumord.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-enumord.Tpo $(DEPDIR)/libpoker_eval_la-enumord.Plo
#	$(AM_V_CC)source='enumord.c' object='libpoker_eval_la-enumord.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-enumord.lo `test -f 'enumord.c' || echo '$(srcdir)/'`enumord.c

libpoker_eval_la-evx.lo: evx.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-evx.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-evx.Tpo -c -o libpoker_eval_la-evx.lo `test -f 'evx.c' || echo '$(srcdir)/'`evx.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-evx.Tpo $(DEPDIR)/libpoker_eval_la-evx.Plo
#	$(AM_V_CC)source='evx.c' object='libpoker_eval_la-evx.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-evx.lo `test -f 'evx.c' || echo '$(srcdir)/'`evx.c

libpoker_eval_la-lowball.lo: lowball.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-lowball.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-lowball.Tpo -c -o libpoker_eval_la-lowball.lo `test -f 'lowball.c' || echo '$(srcdir)/'`lowball.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-lowball.Tpo $(DEPDIR)/libpoker_eval_la-lowball.Plo
#	$(AM_V_CC)source='lowball.c' object='libpoker_eval_la-lowball.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-lowball.lo `test -f 'lowball.c' || echo '$(srcdir)/'`lowball.c

libpoker_eval_la-rules_astud.lo: rules_astud.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-rules_astud.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-rules_astud.Tpo -c -o libpoker_eval_la-rules_astud.lo `test -f 'rules_astud.c' || echo '$(srcdir)/'`rules_astud.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-rules_astud.Tpo $(DEPDIR)/libpoker_eval_la-rules_astud.Plo
#	$(AM_V_CC)source='rules_astud.c' object='libpoker_eval_la-rules_astud.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-rules_astud.lo `test -f 'rules_astud.c' || echo '$(srcdir)/'`rules_astud.c

libpoker_eval_la-rules_joker.lo: rules_joker.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-rules_joker.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-rules_joker.Tpo -c -o libpoker_eval_la-rules_joker.lo `test -f 'rules_joker.c' || echo '$(srcdir)/'`rules_joker.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-rules_joker.Tpo $(DEPDIR)/libpoker_eval_la-rules_joker.Plo
#	$(AM_V_CC)source='rules_joker.c' object='libpoker_eval_la-rules_joker.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-rules_joker.lo `test -f 'rules_joker.c' || echo '$(srcdir)/'`rules_joker.c

libpoker_eval_la-rules_std.lo: rules_std.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-rules_std.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-rules_std.Tpo -c -o libpoker_eval_la-rules_std.lo `test -f 'rules_std.c' || echo '$(srcdir)/'`rules_std.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-rules_std.Tpo $(DEPDIR)/libpoker_eval_la-rules_std.Plo
#	$(AM_V_CC)source='rules_std.c' object='libpoker_eval_la-rules_std.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-rules_std.lo `test -f 'rules_std.c' || echo '$(srcdir)/'`rules_std.c

libpoker_eval_la-poker_wrapper.lo: poker_wrapper.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-poker_wrapper.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-poker_wrapper.Tpo -c -o libpoker_eval_la-poker_wrapper.lo `test -f 'poker_wrapper.c' || echo '$(srcdir)/'`poker_wrapper.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-poker_wrapper.Tpo $(DEPDIR)/libpoker_eval_la-poker_wrapper.Plo
#	$(AM_V_CC)source='poker_wrapper.c' object='libpoker_eval_la-poker_wrapper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-poker_wrapper.lo `test -f 'poker_wrapper.c' || echo '$(srcdir)/'`poker_wrapper.c

libpoker_eval_la-t_nbits.lo: t_nbits.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_nbits.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_nbits.Tpo -c -o libpoker_eval_la-t_nbits.lo `test -f 't_nbits.c' || echo '$(srcdir)/'`t_nbits.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_nbits.Tpo $(DEPDIR)/libpoker_eval_la-t_nbits.Plo
#	$(AM_V_CC)source='t_nbits.c' object='libpoker_eval_la-t_nbits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_nbits.lo `test -f 't_nbits.c' || echo '$(srcdir)/'`t_nbits.c

libpoker_eval_la-t_topbit.lo: t_topbit.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_topbit.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_topbit.Tpo -c -o libpoker_eval_la-t_topbit.lo `test -f 't_topbit.c' || echo '$(srcdir)/'`t_topbit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_topbit.Tpo $(DEPDIR)/libpoker_eval_la-t_topbit.Plo
#	$(AM_V_CC)source='t_topbit.c' object='libpoker_eval_la-t_topbit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_topbit.lo `test -f 't_topbit.c' || echo '$(srcdir)/'`t_topbit.c

libpoker_eval_la-t_topcard.lo: t_topcard.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_topcard.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_topcard.Tpo -c -o libpoker_eval_la-t_topcard.lo `test -f 't_topcard.c' || echo '$(srcdir)/'`t_topcard.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_topcard.Tpo $(DEPDIR)/libpoker_eval_la-t_topcard.Plo
#	$(AM_V_CC)source='t_topcard.c' object='libpoker_eval_la-t_topcard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_topcard.lo `test -f 't_topcard.c' || echo '$(srcdir)/'`t_topcard.c

libpoker_eval_la-t_topfivecards.lo: t_topfivecards.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_topfivecards.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_topfivecards.Tpo -c -o libpoker_eval_la-t_topfivecards.lo `test -f 't_topfivecards.c' || echo '$(srcdir)/'`t_topfivecards.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_topfivecards.Tpo $(DEPDIR)/libpoker_eval_la-t_topfivecards.Plo
#	$(AM_V_CC)source='t_topfivecards.c' object='libpoker_eval_la-t_topfivecards.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_topfivecards.lo `test -f 't_topfivecards.c' || echo '$(srcdir)/'`t_topfivecards.c

libpoker_eval_la-t_topfivebits.lo: t_topfivebits.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_topfivebits.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_topfivebits.Tpo -c -o libpoker_eval_la-t_topfivebits.lo `test -f 't_topfivebits.c' || echo '$(srcdir)/'`t_topfivebits.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_topfivebits.Tpo $(DEPDIR)/libpoker_eval_la-t_topfivebits.Plo
#	$(AM_V_CC)source='t_topfivebits.c' object='libpoker_eval_la-t_topfivebits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_topfivebits.lo `test -f 't_topfivebits.c' || echo '$(srcdir)/'`t_topfivebits.c

libpoker_eval_la-t_toptwobits.lo: t_toptwobits.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_toptwobits.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_toptwobits.Tpo -c -o libpoker_eval_la-t_toptwobits.lo `test -f 't_toptwobits.c' || echo '$(srcdir)/'`t_toptwobits.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_toptwobits.Tpo $(DEPDIR)/libpoker_eval_la-t_toptwobits.Plo
#	$(AM_V_CC)source='t_toptwobits.c' object='libpoker_eval_la-t_toptwobits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_toptwobits.lo `test -f 't_toptwobits.c' || echo '$(srcdir)/'`t_toptwobits.c

libpoker_eval_la-t_cardmasks.lo: t_cardmasks.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_cardmasks.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_cardmasks.Tpo -c -o libpoker_eval_la-t_cardmasks.lo `test -f 't_cardmasks.c' || echo '$(srcdir)/'`t_cardmasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_cardmasks.Tpo $(DEPDIR)/libpoker_eval_la-t_cardmasks.Plo
#	$(AM_V_CC)source='t_cardmasks.c' object='libpoker_eval_la-t_cardmasks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_cardmasks.lo `test -f 't_cardmasks.c' || echo '$(srcdir)/'`t_cardmasks.c

libpoker_eval_la-t_maskrank.lo: t_maskrank.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_maskrank.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_maskrank.Tpo -c -o libpoker_eval_la-t_maskrank.lo `test -f 't_maskrank.c' || echo '$(srcdir)/'`t_maskrank.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_maskrank.Tpo $(DEPDIR)/libpoker_eval_la-t_maskrank.Plo
#	$(AM_V_CC)source='t_maskrank.c' object='libpoker_eval_la-t_maskrank.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_maskrank.lo `test -f 't_maskrank.c' || echo '$(srcdir)/'`t_maskrank.c

libpoker_eval_la-t_straight.lo: t_straight.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_straight.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_straight.Tpo -c -o libpoker_eval_la-t_straight.lo `test -f 't_straight.c' || echo '$(srcdir)/'`t_straight.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_straight.Tpo $(DEPDIR)/libpoker_eval_la-t_straight.Plo
#	$(AM_V_CC)source='t_straight.c' object='libpoker_eval_la-t_straight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_straight.lo `test -f 't_straight.c' || echo '$(srcdir)/'`t_straight.c

libpoker_eval_la-t_jokercardmasks.lo: t_jokercardmasks.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_jokercardmasks.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_jokercardmasks.Tpo -c -o libpoker_eval_la-t_jokercardmasks.lo `test -f 't_jokercardmasks.c' || echo '$(srcdir)/'`t_jokercardmasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_jokercardmasks.Tpo $(DEPDIR)/libpoker_eval_la-t_jokercardmasks.Plo
#	$(AM_V_CC)source='t_jokercardmasks.c' object='libpoker_eval_la-t_jokercardmasks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_jokercardmasks.lo `test -f 't_jokercardmasks.c' || echo '$(srcdir)/'`t_jokercardmasks.c

libpoker_eval_la-t_jokerstraight.lo: t_jokerstraight.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_jokerstraight.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_jokerstraight.Tpo -c -o libpoker_eval_la-t_jokerstraight.lo `test -f 't_jokerstraight.c' || echo '$(srcdir)/'`t_jokerstraight.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_jokerstraight.Tpo $(DEPDIR)/libpoker_eval_la-t_jokerstraight.Plo
#	$(AM_V_CC)source='t_jokerstraight.c' object='libpoker_eval_la-t_jokerstraight.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_jokerstraight.lo `test -f 't_jokerstraight.c' || echo '$(srcdir)/'`t_jokerstraight.c

libpoker_eval_la-t_nbitsandstr.lo: t_nbitsandstr.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_nbitsandstr.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_nbitsandstr.Tpo -c -o libpoker_eval_la-t_nbitsandstr.lo `test -f 't_nbitsandstr.c' || echo '$(srcdir)/'`t_nbitsandstr.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_nbitsandstr.Tpo $(DEPDIR)/libpoker_eval_la-t_nbitsandstr.Plo
#	$(AM_V_CC)source='t_nbitsandstr.c' object='libpoker_eval_la-t_nbitsandstr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_nbitsandstr.lo `test -f 't_nbitsandstr.c' || echo '$(srcdir)/'`t_nbitsandstr.c

libpoker_eval_la-t_evx_pairval.lo: t_evx_pairval.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_evx_pairval.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_evx_pairval.Tpo -c -o libpoker_eval_la-t_evx_pairval.lo `test -f 't_evx_pairval.c' || echo '$(srcdir)/'`t_evx_pairval.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_evx_pairval.Tpo $(DEPDIR)/libpoker_eval_la-t_evx_pairval.Plo
#	$(AM_V_CC)source='t_evx_pairval.c' object='libpoker_eval_la-t_evx_pairval.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_evx_pairval.lo `test -f 't_evx_pairval.c' || echo '$(srcdir)/'`t_evx_pairval.c

libpoker_eval_la-t_evx_strval.lo: t_evx_strval.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_evx_strval.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_evx_strval.Tpo -c -o libpoker_eval_la-t_evx_strval.lo `test -f 't_evx_strval.c' || echo '$(srcdir)/'`t_evx_strval.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_evx_strval.Tpo $(DEPDIR)/libpoker_eval_la-t_evx_strval.Plo
#	$(AM_V_CC)source='t_evx_strval.c' object='libpoker_eval_la-t_evx_strval.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_evx_strval.lo `test -f 't_evx_strval.c' || echo '$(srcdir)/'`t_evx_strval.c

libpoker_eval_la-t_evx_tripsval.lo: t_evx_tripsval.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_evx_tripsval.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_evx_tripsval.Tpo -c -o libpoker_eval_la-t_evx_tripsval.lo `test -f 't_evx_tripsval.c' || echo '$(srcdir)/'`t_evx_tripsval.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_evx_tripsval.Tpo $(DEPDIR)/libpoker_eval_la-t_evx_tripsval.Plo
#	$(AM_V_CC)source='t_evx_tripsval.c' object='libpoker_eval_la-t_evx_tripsval.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_evx_tripsval.lo `test -f 't_evx_tripsval.c' || echo '$(srcdir)/'`t_evx_tripsval.c

libpoker_eval_la-t_evx_flushcards.lo: t_evx_flushcards.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_evx_flushcards.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_evx_flushcards.Tpo -c -o libpoker_eval_la-t_evx_flushcards.lo `test -f 't_evx_flushcards.c' || echo '$(srcdir)/'`t_evx_flushcards.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_evx_flushcards.Tpo $(DEPDIR)/libpoker_eval_la-t_evx_flushcards.Plo
#	$(AM_V_CC)source='t_evx_flushcards.c' object='libpoker_eval_la-t_evx_flushcards.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_evx_flushcards.lo `test -f 't_evx_flushcards.c' || echo '$(srcdir)/'`t_evx_flushcards.c

libpoker_eval_la-t_astudcardmasks.lo: t_astudcardmasks.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_astudcardmasks.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_astudcardmasks.Tpo -c -o libpoker_eval_la-t_astudcardmasks.lo `test -f 't_astudcardmasks.c' || echo '$(srcdir)/'`t_astudcardmasks.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_astudcardmasks.Tpo $(DEPDIR)/libpoker_eval_la-t_astudcardmasks.Plo
#	$(AM_V_CC)source='t_astudcardmasks.c' object='libpoker_eval_la-t_astudcardmasks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_astudcardmasks.lo `test -f 't_astudcardmasks.c' || echo '$(srcdir)/'`t_astudcardmasks.c

libpoker_eval_la-t_botfivecards.lo: t_botfivecards.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_botfivecards.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_botfivecards.Tpo -c -o libpoker_eval_la-t_botfivecards.lo `test -f 't_botfivecards.c' || echo '$(srcdir)/'`t_botfivecards.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_botfivecards.Tpo $(DEPDIR)/libpoker_eval_la-t_botfivecards.Plo
#	$(AM_V_CC)source='t_botfivecards.c' object='libpoker_eval_la-t_botfivecards.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_botfivecards.lo `test -f 't_botfivecards.c' || echo '$(srcdir)/'`t_botfivecards.c

libpoker_eval_la-t_botcard.lo: t_botcard.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_botcard.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_botcard.Tpo -c -o libpoker_eval_la-t_botcard.lo `test -f 't_botcard.c' || echo '$(srcdir)/'`t_botcard.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_botcard.Tpo $(DEPDIR)/libpoker_eval_la-t_botcard.Plo
#	$(AM_V_CC)source='t_botcard.c' object='libpoker_eval_la-t_botcard.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_botcard.lo `test -f 't_botcard.c' || echo '$(srcdir)/'`t_botcard.c

libpoker_eval_la-t_botfivecardsj.lo: t_botfivecardsj.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT libpoker_eval_la-t_botfivecardsj.lo -MD -MP -MF $(DEPDIR)/libpoker_eval_la-t_botfivecardsj.Tpo -c -o libpoker_eval_la-t_botfivecardsj.lo `test -f 't_botfivecardsj.c' || echo '$(srcdir)/'`t_botfivecardsj.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libpoker_eval_la-t_botfivecardsj.Tpo $(DEPDIR)/libpoker_eval_la-t_botfivecardsj.Plo
#	$(AM_V_CC)source='t_botfivecardsj.c' object='libpoker_eval_la-t_botfivecardsj.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libpoker_eval_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o libpoker_eval_la-t_botfivecardsj.lo `test -f 't_botfivecardsj.c' || echo '$(srcdir)/'`t_botfivecardsj.c

evx_gen5-evx_generate.o: evx_generate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT evx_gen5-evx_generate.o -MD -MP -MF $(DEPDIR)/evx_gen5-evx_generate.Tpo -c -o evx_gen5-evx_generate.o `test -f 'evx_generate.c' || echo '$(srcdir)/'`evx_generate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/evx_gen5-evx_generate.Tpo $(DEPDIR)/evx_gen5-evx_generate.Po
#	$(AM_V_CC)source='evx_generate.c' object='evx_gen5-evx_generate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o evx_gen5-evx_generate.o `test -f 'evx_generate.c' || echo '$(srcdir)/'`evx_generate.c

evx_gen5-evx_generate.obj: evx_generate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT evx_gen5-evx_generate.obj -MD -MP -MF $(DEPDIR)/evx_gen5-evx_generate.Tpo -c -o evx_gen5-evx_generate.obj `if test -f 'evx_generate.c'; then $(CYGPATH_W) 'evx_generate.c'; else $(CYGPATH_W) '$(srcdir)/evx_generate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/evx_gen5-evx_generate.Tpo $(DEPDIR)/evx_gen5-evx_generate.Po
#	$(AM_V_CC)source='evx_generate.c' object='evx_gen5-evx_generate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen5_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o evx_gen5-evx_generate.obj `if test -f 'evx_generate.c'; then $(CYGPATH_W) 'evx_generate.c'; else $(CYGPATH_W) '$(srcdir)/evx_generate.c'; fi`

evx_gen7-evx_generate.o: evx_generate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT evx_gen7-evx_generate.o -MD -MP -MF $(DEPDIR)/evx_gen7-evx_generate.Tpo -c -o evx_gen7-evx_generate.o `test -f 'evx_generate.c' || echo '$(srcdir)/'`evx_generate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/evx_gen7-evx_generate.Tpo $(DEPDIR)/evx_gen7-evx_generate.Po
#	$(AM_V_CC)source='evx_generate.c' object='evx_gen7-evx_generate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o evx_gen7-evx_generate.o `test -f 'evx_generate.c' || echo '$(srcdir)/'`evx_generate.c

evx_gen7-evx_generate.obj: evx_generate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT evx_gen7-evx_generate.obj -MD -MP -MF $(DEPDIR)/evx_gen7-evx_generate.Tpo -c -o evx_gen7-evx_generate.obj `if test -f 'evx_generate.c'; then $(CYGPATH_W) 'evx_generate.c'; else $(CYGPATH_W) '$(srcdir)/evx_generate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/evx_gen7-evx_generate.Tpo $(DEPDIR)/evx_gen7-evx_generate.Po
#	$(AM_V_CC)source='evx_generate.c' object='evx_gen7-evx_generate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evx_gen7_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o evx_gen7-evx_generate.obj `if test -f 'evx_generate.c'; then $(CYGPATH_W) 'evx_generate.c'; else $(CYGPATH_W) '$(srcdir)/evx_generate.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) all-local
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


${BASIC_TABLES}: mktab_basic$(EXEEXT)
	./mktab_basic

${JOKER_TABLES}: mktab_joker$(EXEEXT) 
	./mktab_joker

${PACKED_TABLES}: mktab_packed$(EXEEXT)
	./mktab_packed

${EVX_TABLES}: mktab_evx$(EXEEXT) 
	./mktab_evx

${ASTUD_TABLES}: mktab_astud$(EXEEXT) 
	./mktab_astud

${LOWBALL_TABLES}: mktab_lowball$(EXEEXT) 
	./mktab_lowball

all-local: evx_gen5 evx_gen7 evx_preamble.cfrag
	if [ -w "$(top_srcdir)/include/inlines/evx5.h" ] ; then \
		./evx_gen5 "$(srcdir)" > "$(top_srcdir)/include/inlines/evx5.h" ; \
	fi
	if [ -w "$(top_srcdir)/include/inlines/evx7.h" ] ; then \
		./evx_gen7 "$(srcdir)" > "$(top_srcdir)/include/inlines/evx7.h" ; \
	fi

clean-local:
	rm -f t_*.c
	-rm -f *.gcov *.gcda *.gcno

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
